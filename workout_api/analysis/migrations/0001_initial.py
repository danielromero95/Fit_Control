# Generated by Django 4.2.23 on 2025-07-01 10:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("workouts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VideoAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_file",
                    models.FileField(
                        help_text="Archivo de vídeo original",
                        upload_to="analysis_videos/%Y/%m/%d/",
                    ),
                ),
                (
                    "processed_video",
                    models.FileField(
                        blank=True,
                        help_text="Vídeo procesado con anotaciones",
                        null=True,
                        upload_to="processed_videos/%Y/%m/%d/",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                        ],
                        default="pending",
                        help_text="Estado del análisis",
                        max_length=20,
                    ),
                ),
                (
                    "rep_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Número de repeticiones detectadas",
                        null=True,
                    ),
                ),
                (
                    "feedback_score",
                    models.FloatField(
                        blank=True,
                        help_text="Puntuación general de la técnica (0.0 a 1.0)",
                        null=True,
                    ),
                ),
                (
                    "feedback_text",
                    models.TextField(
                        blank=True, help_text="Feedback detallado generado por la IA"
                    ),
                ),
                (
                    "analysis_data",
                    models.JSONField(
                        blank=True,
                        help_text="Datos detallados del análisis (landmarks, ángulos, etc.)",
                        null=True,
                    ),
                ),
                (
                    "processing_time",
                    models.FloatField(
                        blank=True,
                        help_text="Tiempo de procesamiento en segundos",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Mensaje de error si el análisis falló"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "exercise",
                    models.ForeignKey(
                        help_text="Ejercicio que se está analizando",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_analyses",
                        to="workouts.exercise",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Usuario que subió el vídeo",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_analyses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Análisis de Vídeo",
                "verbose_name_plural": "Análisis de Vídeos",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExerciseAnalysisConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key_landmarks",
                    models.JSONField(
                        help_text="Landmarks clave para este ejercicio (ej. codos, rodillas)"
                    ),
                ),
                (
                    "angle_ranges",
                    models.JSONField(
                        help_text="Rangos de ángulos óptimos para cada articulación"
                    ),
                ),
                (
                    "movement_patterns",
                    models.JSONField(help_text="Patrones de movimiento esperados"),
                ),
                (
                    "common_errors",
                    models.JSONField(help_text="Errores comunes y sus indicadores"),
                ),
                (
                    "min_frames_per_rep",
                    models.PositiveIntegerField(
                        default=30, help_text="Mínimo número de frames por repetición"
                    ),
                ),
                (
                    "rep_detection_threshold",
                    models.FloatField(
                        default=0.7,
                        help_text="Umbral para detectar una repetición completa",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Si esta configuración está activa"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "exercise",
                    models.OneToOneField(
                        help_text="Ejercicio al que se aplica esta configuración",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_config",
                        to="workouts.exercise",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Análisis",
                "verbose_name_plural": "Configuraciones de Análisis",
            },
        ),
        migrations.CreateModel(
            name="AnalysisMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rep_number",
                    models.PositiveIntegerField(help_text="Número de la repetición"),
                ),
                (
                    "duration",
                    models.FloatField(
                        help_text="Duración de la repetición en segundos"
                    ),
                ),
                (
                    "rom_score",
                    models.FloatField(
                        help_text="Puntuación del rango de movimiento (0.0 a 1.0)"
                    ),
                ),
                (
                    "speed_score",
                    models.FloatField(
                        help_text="Puntuación de la velocidad del movimiento (0.0 a 1.0)"
                    ),
                ),
                (
                    "form_score",
                    models.FloatField(
                        help_text="Puntuación de la forma/técnica (0.0 a 1.0)"
                    ),
                ),
                (
                    "symmetry_score",
                    models.FloatField(
                        blank=True,
                        help_text="Puntuación de simetría (0.0 a 1.0)",
                        null=True,
                    ),
                ),
                (
                    "detected_errors",
                    models.JSONField(
                        blank=True,
                        help_text="Errores detectados en esta repetición",
                        null=True,
                    ),
                ),
                (
                    "landmark_data",
                    models.JSONField(
                        blank=True,
                        help_text="Datos de landmarks para esta repetición",
                        null=True,
                    ),
                ),
                (
                    "video_analysis",
                    models.ForeignKey(
                        help_text="Análisis al que pertenecen estas métricas",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="analysis.videoanalysis",
                    ),
                ),
            ],
            options={
                "verbose_name": "Métrica de Análisis",
                "verbose_name_plural": "Métricas de Análisis",
                "ordering": ["video_analysis", "rep_number"],
            },
        ),
        migrations.AddIndex(
            model_name="videoanalysis",
            index=models.Index(
                fields=["user", "status"], name="analysis_vi_user_id_1756c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoanalysis",
            index=models.Index(
                fields=["exercise", "status"], name="analysis_vi_exercis_fb6c72_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="analysismetrics",
            unique_together={("video_analysis", "rep_number")},
        ),
    ]
