# Generated by Django 4.2.23 on 2025-07-01 10:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre del ejercicio (ej. Press de Banca)",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Descripción detallada de la técnica del ejercicio"
                    ),
                ),
                (
                    "muscle_group",
                    models.CharField(
                        choices=[
                            ("pecho", "Pecho"),
                            ("espalda", "Espalda"),
                            ("hombros", "Hombros"),
                            ("biceps", "Bíceps"),
                            ("triceps", "Tríceps"),
                            ("piernas", "Piernas"),
                            ("cuadriceps", "Cuádriceps"),
                            ("isquiotibiales", "Isquiotibiales"),
                            ("gluteos", "Glúteos"),
                            ("pantorrillas", "Pantorrillas"),
                            ("abdominales", "Abdominales"),
                            ("cardio", "Cardio"),
                            ("cuerpo_completo", "Cuerpo Completo"),
                        ],
                        help_text="Grupo muscular principal trabajado",
                        max_length=50,
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True,
                        help_text="URL a un vídeo de demostración del ejercicio",
                        null=True,
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("principiante", "Principiante"),
                            ("intermedio", "Intermedio"),
                            ("avanzado", "Avanzado"),
                        ],
                        default="intermedio",
                        help_text="Nivel de dificultad del ejercicio",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Ejercicio",
                "verbose_name_plural": "Ejercicios",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WorkoutDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (1, "Lunes"),
                            (2, "Martes"),
                            (3, "Miércoles"),
                            (4, "Jueves"),
                            (5, "Viernes"),
                            (6, "Sábado"),
                            (7, "Domingo"),
                        ],
                        help_text="Día de la semana (1=Lunes, 7=Domingo)",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Nombre opcional para el día (ej. 'Día de Pecho')",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "verbose_name": "Día de Entrenamiento",
                "verbose_name_plural": "Días de Entrenamiento",
                "ordering": ["plan", "day_of_week"],
            },
        ),
        migrations.CreateModel(
            name="WorkoutPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre del plan (ej. Hipertrofia 3 días/semana)",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Descripción detallada del plan de entrenamiento"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Si el plan está disponible para todos los usuarios",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="Usuario o admin que creó el plan",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan de Entrenamiento",
                "verbose_name_plural": "Planes de Entrenamiento",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WorkoutExercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sets",
                    models.PositiveIntegerField(
                        help_text="Número de series",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "reps",
                    models.CharField(
                        help_text="Rango de repeticiones (ej. '8-12' o '15')",
                        max_length=20,
                    ),
                ),
                (
                    "rest_period",
                    models.PositiveIntegerField(
                        help_text="Tiempo de descanso en segundos",
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(600),
                        ],
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=1, help_text="Orden del ejercicio en el día"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notas adicionales sobre el ejercicio"
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        help_text="Ejercicio a realizar",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workouts.exercise",
                    ),
                ),
                (
                    "workout_day",
                    models.ForeignKey(
                        help_text="Día de entrenamiento",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workout_exercises",
                        to="workouts.workoutday",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ejercicio de Entrenamiento",
                "verbose_name_plural": "Ejercicios de Entrenamiento",
                "ordering": ["workout_day", "order"],
                "unique_together": {("exercise", "workout_day")},
            },
        ),
        migrations.AddField(
            model_name="workoutday",
            name="exercises",
            field=models.ManyToManyField(
                help_text="Ejercicios programados para este día",
                related_name="workout_days",
                through="workouts.WorkoutExercise",
                to="workouts.exercise",
            ),
        ),
        migrations.AddField(
            model_name="workoutday",
            name="plan",
            field=models.ForeignKey(
                help_text="Plan al que pertenece este día",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workout_days",
                to="workouts.workoutplan",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workoutday",
            unique_together={("plan", "day_of_week")},
        ),
        migrations.CreateModel(
            name="UserWorkoutPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Fecha en que el usuario comenzó este plan"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Fecha en que el usuario terminó/abandonó el plan",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Si el usuario está siguiendo actualmente este plan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workout_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to="workouts.workoutplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan de Usuario",
                "verbose_name_plural": "Planes de Usuario",
                "ordering": ["-start_date"],
                "unique_together": {("user", "workout_plan", "start_date")},
            },
        ),
        migrations.CreateModel(
            name="UserPerformanceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(help_text="Fecha de la sesión")),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Peso levantado en kilogramos",
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "reps_completed",
                    models.PositiveIntegerField(
                        help_text="Repeticiones completadas en esta serie"
                    ),
                ),
                (
                    "set_number",
                    models.PositiveIntegerField(
                        help_text="Número de la serie",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "feedback_score",
                    models.FloatField(
                        blank=True,
                        help_text="Puntuación del análisis de vídeo (0.0 a 1.0)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "feedback_text",
                    models.TextField(
                        blank=True,
                        help_text="Comentarios generados por la IA sobre la técnica",
                    ),
                ),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        help_text="Archivo de vídeo del ejercicio realizado",
                        null=True,
                        upload_to="user_videos/",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Usuario que realizó el ejercicio",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workout_exercise",
                    models.ForeignKey(
                        help_text="Ejercicio específico del plan",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_logs",
                        to="workouts.workoutexercise",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Rendimiento",
                "verbose_name_plural": "Registros de Rendimiento",
                "ordering": ["-date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="workouts_us_user_id_e50b94_idx"
                    ),
                    models.Index(
                        fields=["workout_exercise", "date"],
                        name="workouts_us_workout_15459c_idx",
                    ),
                ],
            },
        ),
    ]
